{
  "version": 3,
  "sources": ["../../three-stdlib/controls/OrbitControls.js"],
  "sourcesContent": ["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { EventDispatcher, Vector3, MOUSE, TOUCH, Quaternion, Spherical, Vector2, PerspectiveCamera, OrthographicCamera } from \"three\";\nconst moduloWrapAround = (offset, capacity) => (offset % capacity + capacity) % capacity;\nclass OrbitControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super();\n    __publicField(this, \"object\");\n    __publicField(this, \"domElement\");\n    // Set to false to disable this control\n    __publicField(this, \"enabled\", true);\n    // \"target\" sets the location of focus, where the object orbits around\n    __publicField(this, \"target\", new Vector3());\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    __publicField(this, \"minDistance\", 0);\n    __publicField(this, \"maxDistance\", Infinity);\n    // How far you can zoom in and out ( OrthographicCamera only )\n    __publicField(this, \"minZoom\", 0);\n    __publicField(this, \"maxZoom\", Infinity);\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    __publicField(this, \"minPolarAngle\", 0);\n    // radians\n    __publicField(this, \"maxPolarAngle\", Math.PI);\n    // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n    __publicField(this, \"minAzimuthAngle\", -Infinity);\n    // radians\n    __publicField(this, \"maxAzimuthAngle\", Infinity);\n    // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    __publicField(this, \"enableDamping\", false);\n    __publicField(this, \"dampingFactor\", 0.05);\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    __publicField(this, \"enableZoom\", true);\n    __publicField(this, \"zoomSpeed\", 1);\n    // Set to false to disable rotating\n    __publicField(this, \"enableRotate\", true);\n    __publicField(this, \"rotateSpeed\", 1);\n    // Set to false to disable panning\n    __publicField(this, \"enablePan\", true);\n    __publicField(this, \"panSpeed\", 1);\n    __publicField(this, \"screenSpacePanning\", true);\n    // if false, pan orthogonal to world-space direction camera.up\n    __publicField(this, \"keyPanSpeed\", 7);\n    // pixels moved per arrow key push\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    __publicField(this, \"autoRotate\", false);\n    __publicField(this, \"autoRotateSpeed\", 2);\n    // 30 seconds per orbit when fps is 60\n    __publicField(this, \"reverseOrbit\", false);\n    // true if you want to reverse the orbit to mouse drag from left to right = orbits left\n    // The four arrow keys\n    __publicField(this, \"keys\", { LEFT: \"ArrowLeft\", UP: \"ArrowUp\", RIGHT: \"ArrowRight\", BOTTOM: \"ArrowDown\" });\n    // Mouse buttons\n    __publicField(this, \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n    // Touch fingers\n    __publicField(this, \"touches\", { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN });\n    __publicField(this, \"target0\");\n    __publicField(this, \"position0\");\n    __publicField(this, \"zoom0\");\n    // the target DOM element for key events\n    __publicField(this, \"_domElementKeyEvents\", null);\n    __publicField(this, \"getPolarAngle\");\n    __publicField(this, \"getAzimuthalAngle\");\n    __publicField(this, \"setPolarAngle\");\n    __publicField(this, \"setAzimuthalAngle\");\n    __publicField(this, \"getDistance\");\n    __publicField(this, \"listenToKeyEvents\");\n    __publicField(this, \"saveState\");\n    __publicField(this, \"reset\");\n    __publicField(this, \"update\");\n    __publicField(this, \"connect\");\n    __publicField(this, \"dispose\");\n    this.object = object;\n    this.domElement = domElement;\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n    this.getPolarAngle = () => spherical.phi;\n    this.getAzimuthalAngle = () => spherical.theta;\n    this.setPolarAngle = (value) => {\n      let phi = moduloWrapAround(value, 2 * Math.PI);\n      let currentPhi = spherical.phi;\n      if (currentPhi < 0)\n        currentPhi += 2 * Math.PI;\n      if (phi < 0)\n        phi += 2 * Math.PI;\n      let phiDist = Math.abs(phi - currentPhi);\n      if (2 * Math.PI - phiDist < phiDist) {\n        if (phi < currentPhi) {\n          phi += 2 * Math.PI;\n        } else {\n          currentPhi += 2 * Math.PI;\n        }\n      }\n      sphericalDelta.phi = phi - currentPhi;\n      scope.update();\n    };\n    this.setAzimuthalAngle = (value) => {\n      let theta = moduloWrapAround(value, 2 * Math.PI);\n      let currentTheta = spherical.theta;\n      if (currentTheta < 0)\n        currentTheta += 2 * Math.PI;\n      if (theta < 0)\n        theta += 2 * Math.PI;\n      let thetaDist = Math.abs(theta - currentTheta);\n      if (2 * Math.PI - thetaDist < thetaDist) {\n        if (theta < currentTheta) {\n          theta += 2 * Math.PI;\n        } else {\n          currentTheta += 2 * Math.PI;\n        }\n      }\n      sphericalDelta.theta = theta - currentTheta;\n      scope.update();\n    };\n    this.getDistance = () => scope.object.position.distanceTo(scope.target);\n    this.listenToKeyEvents = (domElement2) => {\n      domElement2.addEventListener(\"keydown\", onKeyDown);\n      this._domElementKeyEvents = domElement2;\n    };\n    this.saveState = () => {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n    this.reset = () => {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    };\n    this.update = (() => {\n      const offset = new Vector3();\n      const quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n        offset.applyQuaternion(quat);\n        spherical.setFromVector3(offset);\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        }\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI)\n            min += twoPI;\n          else if (min > Math.PI)\n            min -= twoPI;\n          if (max < -Math.PI)\n            max += twoPI;\n          else if (max > Math.PI)\n            max -= twoPI;\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        }\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale;\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius));\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n        offset.setFromSpherical(spherical);\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n        scale = 1;\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n        return false;\n      };\n    })();\n    this.connect = (domElement2) => {\n      if (domElement2 === document) {\n        console.error(\n          'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.'\n        );\n      }\n      scope.domElement = domElement2;\n      scope.domElement.style.touchAction = \"none\";\n      scope.domElement.addEventListener(\"contextmenu\", onContextMenu);\n      scope.domElement.addEventListener(\"pointerdown\", onPointerDown);\n      scope.domElement.addEventListener(\"pointercancel\", onPointerCancel);\n      scope.domElement.addEventListener(\"wheel\", onMouseWheel);\n    };\n    this.dispose = () => {\n      var _a, _b, _c, _d, _e, _f;\n      (_a = scope.domElement) == null ? void 0 : _a.removeEventListener(\"contextmenu\", onContextMenu);\n      (_b = scope.domElement) == null ? void 0 : _b.removeEventListener(\"pointerdown\", onPointerDown);\n      (_c = scope.domElement) == null ? void 0 : _c.removeEventListener(\"pointercancel\", onPointerCancel);\n      (_d = scope.domElement) == null ? void 0 : _d.removeEventListener(\"wheel\", onMouseWheel);\n      (_e = scope.domElement) == null ? void 0 : _e.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n      (_f = scope.domElement) == null ? void 0 : _f.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown);\n      }\n    };\n    const scope = this;\n    const changeEvent = { type: \"change\" };\n    const startEvent = { type: \"start\" };\n    const endEvent = { type: \"end\" };\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 1e-6;\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    let zoomChanged = false;\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n    const pointers = [];\n    const pointerPositions = {};\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n    function rotateLeft(angle) {\n      if (scope.reverseOrbit) {\n        sphericalDelta.theta += angle;\n      } else {\n        sphericalDelta.theta -= angle;\n      }\n    }\n    function rotateUp(angle) {\n      if (scope.reverseOrbit) {\n        sphericalDelta.phi += angle;\n      } else {\n        sphericalDelta.phi -= angle;\n      }\n    }\n    const panLeft = (() => {\n      const v = new Vector3();\n      return function panLeft2(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    })();\n    const panUp = (() => {\n      const v = new Vector3();\n      return function panUp2(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    })();\n    const pan = (() => {\n      const offset = new Vector3();\n      return function pan2(deltaX, deltaY) {\n        const element = scope.domElement;\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length();\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180);\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          panLeft(\n            deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth,\n            scope.object.matrix\n          );\n          panUp(\n            deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight,\n            scope.object.matrix\n          );\n        } else {\n          console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\");\n          scope.enablePan = false;\n        }\n      };\n    })();\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n        scope.enableZoom = false;\n      }\n    }\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n        scope.enableZoom = false;\n      }\n    }\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n      scope.update();\n    }\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n      if (needsUpdate) {\n        event.preventDefault();\n        scope.update();\n      }\n    }\n    function handleTouchStartRotate() {\n      if (pointers.length == 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n    function handleTouchStartPan() {\n      if (pointers.length == 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX;\n      const dy = pointers[0].pageY - pointers[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom)\n        handleTouchStartDolly();\n      if (scope.enablePan)\n        handleTouchStartPan();\n    }\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom)\n        handleTouchStartDolly();\n      if (scope.enableRotate)\n        handleTouchStartRotate();\n    }\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n    }\n    function handleTouchMovePan(event) {\n      if (pointers.length == 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event);\n      const dx = event.pageX - position.x;\n      const dy = event.pageY - position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom)\n        handleTouchMoveDolly(event);\n      if (scope.enablePan)\n        handleTouchMovePan(event);\n    }\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom)\n        handleTouchMoveDolly(event);\n      if (scope.enableRotate)\n        handleTouchMoveRotate(event);\n    }\n    function onPointerDown(event) {\n      var _a, _b;\n      if (scope.enabled === false)\n        return;\n      if (pointers.length === 0) {\n        (_a = scope.domElement) == null ? void 0 : _a.ownerDocument.addEventListener(\"pointermove\", onPointerMove);\n        (_b = scope.domElement) == null ? void 0 : _b.ownerDocument.addEventListener(\"pointerup\", onPointerUp);\n      }\n      addPointer(event);\n      if (event.pointerType === \"touch\") {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n    function onPointerMove(event) {\n      if (scope.enabled === false)\n        return;\n      if (event.pointerType === \"touch\") {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n    function onPointerUp(event) {\n      var _a, _b, _c;\n      removePointer(event);\n      if (pointers.length === 0) {\n        (_a = scope.domElement) == null ? void 0 : _a.releasePointerCapture(event.pointerId);\n        (_b = scope.domElement) == null ? void 0 : _b.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n        (_c = scope.domElement) == null ? void 0 : _c.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n      }\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n    function onPointerCancel(event) {\n      removePointer(event);\n    }\n    function onMouseDown(event) {\n      let mouseAction;\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n        default:\n          mouseAction = -1;\n      }\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false)\n            return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false)\n              return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false)\n              return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n          break;\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false)\n              return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false)\n              return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onMouseMove(event) {\n      if (scope.enabled === false)\n        return;\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false)\n            return;\n          handleMouseMoveRotate(event);\n          break;\n        case STATE.DOLLY:\n          if (scope.enableZoom === false)\n            return;\n          handleMouseMoveDolly(event);\n          break;\n        case STATE.PAN:\n          if (scope.enablePan === false)\n            return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false)\n        return;\n      handleKeyDown(event);\n    }\n    function onTouchStart(event) {\n      trackPointer(event);\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false)\n                return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n            case TOUCH.PAN:\n              if (scope.enablePan === false)\n                return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false)\n                return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false)\n                return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onTouchMove(event) {\n      trackPointer(event);\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false)\n            return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false)\n            return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false)\n            return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false)\n            return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n        default:\n          state = STATE.NONE;\n      }\n    }\n    function onContextMenu(event) {\n      if (scope.enabled === false)\n        return;\n      event.preventDefault();\n    }\n    function addPointer(event) {\n      pointers.push(event);\n    }\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId];\n      if (position === void 0) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n      position.set(event.pageX, event.pageY);\n    }\n    function getSecondPointerPosition(event) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    }\n    if (domElement !== void 0)\n      this.connect(domElement);\n    this.update();\n  }\n}\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false;\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n  }\n}\nexport {\n  MapControls,\n  OrbitControls\n};\n"],
  "mappings": "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",
  "names": []
}
